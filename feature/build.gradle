apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "sst.example.androiddemo.feature"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
                abiFilters "armeabi-v7a"
            }
        }
        ndk {
            abiFilters "armeabi-v7a"
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.google.android.material:material:1.1.0-alpha06'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'
    api 'androidx.appcompat:appcompat:1.1.0-alpha05'

    api 'androidx.constraintlayout:constraintlayout:2.0.0-beta1'
    api 'androidx.recyclerview:recyclerview:1.1.0-alpha05'
    api 'androidx.dynamicanimation:dynamicanimation:1.1.0-alpha01'
    api 'androidx.core:core-ktx:1.2.0-alpha01'
    //    视频编辑
//    implementation 'com.github.yangjie10930:EpMedia:v0.9.5'
    //util 计划去除
    implementation 'com.blankj:utilcodex:1.23.7'

    //微信sdk
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:+'


}

task getIPConfig(type: Exec) {
    commandLine "java", "-version"
    //store the output instead of printing to the console:
    standardOutput = new ByteArrayOutputStream()

    //extension method stopTomcat.output() can be used to obtain the output:
    ext.output = {
        return standardOutput.toString()
    }
}

task emptyTask() {
    println("emptyTask ===== ")
}
task getGitVersion(dependsOn: 'getIPConfig') {
    def out = tasks.getIPConfig.output()
    println("out is " + out)

}
